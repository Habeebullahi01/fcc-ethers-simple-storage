const ethers = require("ethers")
const fs = require("fs")
require("dotenv").config()

async function main() {
  // http://127.0.0.1:7545
  const provider = new ethers.providers.JsonRpcProvider(process.env.RPC_URL)
  const wallet = new ethers.Wallet(process.env.PRIVATE_KEY, provider)
  //   const encryptedKey = fs.readFileSync("./.encryptedKey.json", "utf8");
  //   let wallet = new ethers.Wallet.fromEncryptedJsonSync(
  //     encryptedKey,
  //     process.env.PRIVATE_KEY_PASSWORD
  //   );
  //   wallet = await wallet.connect(provider);

  const abi = fs.readFileSync("./SimpleStorage_sol_SimpleStorage.abi", "utf8")
  const binary = fs.readFileSync(
    "./SimpleStorage_sol_SimpleStorage.bin",
    "utf8"
  )

  const contractFactory = new ethers.ContractFactory(abi, binary, wallet)
  const contract = await contractFactory.deploy()
  console.log("Contract deployment underway. Please wait.....")
  const d = await contract.deployTransaction.wait(1)
  console.log(`Contract Address: ${contract.address}`)
  console.log(`${d.confirmations} Block confirmations`)
  const currentFavNum = await contract.retrieve()
  console.log(`Current Favorite Number: ${currentFavNum.toString()}`)
  const txResponse = await contract.store(3)
  const txReceipt = await txResponse.wait(1)
  console.log(`New Fav Num: ${await contract.retrieve()}`)

  //   const nonce = await wallet.getTransactionCount();
  //   const tx = {
  //     nonce: nonce,
  //     gasPrice: 20000000000,
  //     gasLimit: 6721975,
  //     to: null,
  //     value: 0,
  //     data: "",
  //     chainId: 1337,
  //   };
  //   const sentTransaction = await wallet.sendTransaction(tx);
  //   await sentTransaction.wait(1);
  //   console.log(sentTransaction);
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.log(error)
    process.exit(1)
  })
